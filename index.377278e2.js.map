{"mappings":"AAAA,MAAM,iBAAiB,IAAI,IAAI;IAAC;IAAS;CAAmB;AAC5D,MAAM,SAAS;IAAC;IAAgB;IAAa;CAAa;AAC1D,IAAI,QAAQ;AACZ,IAAI,YAAY;AAChB,IAAI,aAAa;AAEjB,OAAO,MAAM,GAAG;IACZ,OAAO,OAAO,CAAC,CAAC;QACZ,eAAe,OAAO,CAAC,CAAC;YACpB,MAAM,eAAe,SAAS,cAAc,CAAC;YAC7C,aAAa,gBAAgB,CAAC,WAAW,CAAC;gBACtC;YACJ;QACJ;QACA;IACJ;AACJ;AAEA,SAAS,KAAK,EAAU;IACpB,OAAO,AAAC,SAAS,cAAc,CAAC,IAAyB,KAAK;AAClE;AAGA,SAAS;IACL,MAAM,YAAY,KAAK;IACvB,MAAM,gBAAgB,KAAK;IAC3B,MAAM,iBAAiB,KAAK;IAC5B,IAAG,kBAAkB,MAAO,CAAA,cAAc,SAAS,kBAAkB,aAAa,mBAAmB,UAAS,GAAI;QAC9G,QAAQ;QACR,YAAY;QACZ,aAAa;QACb,MAAM,UAAU,gBAAgB,OAAO,WAAW;QAClD,MAAM,MAAM,QAAQ,GAAG,CAAC,CAAC,SAAmB,CAAC,IAAI,EAAE,OAAO,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC;QACpF,MAAM,KAAK,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC;QACrC,MAAM,SAAS,SAAS,cAAc,CAAC;QACvC,OAAO,SAAS,GAAG;IACvB;AACJ;AAQA,UAAU,SAAS,MAAc,EAAE,SAAiB,EAAE,UAAkB;IACpE,QAAQ,GAAG,CAAC;IACZ,IAAI,KAAK,OAAO,CAAC,CAAC,OAAO,CAAC;IAC1B,MAAO,OAAO,GAAI;QACd,MAAM,WAAW,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,MAAM,aAAa,OAAO,CAAC,CAAC,SAAS,CAAC,KAAG,UAAU,MAAM;QAChG,MAAM;YACF,GAAG;YACH,QAAQ;YACR,OAAO,OAAO,KAAK,GAAG;QAC1B;QACA,QAAQ,GAAG,CAAC;QACZ,KAAK,OAAO,CAAC,CAAC,OAAO,CAAC,WAAW,KAAK;IACxC;AACN;AAEA,SAAS,gBAAgB,KAAa,EAAE,SAAiB,EAAE,UAAkB;IACzE,MAAM,cAAsB;QACxB,GAAG;QACH,QAAQ;QACR,OAAO;IACX;IACA,IAAI,UAAU;QAAC;KAAY;IAC3B,IAAI,KAAK;IACT,MAAM,KAAK,QAAQ,MAAM,IAAI,KAAK,IAAK;QACnC,KAAI,IAAI,OAAO,SAAS,OAAO,CAAC,GAAG,EAAE,WAAW,YAAa;YACzD,QAAQ,GAAG,CAAC;YACZ,QAAQ,IAAI,CAAC;QACjB;QACA,MAAM;IACV;IACA,OAAO;AACX","sources":["src/index.ts"],"sourcesContent":["const possibleEvents = new Set([\"input\", \"onpropertychange\"]);\nconst inputs = [\"start_string\", \"in_string\", \"out_string\"];\nlet start = \"\";\nlet in_string = \"\";\nlet out_string = \"\";\n\nwindow.onload = () => {\n    inputs.forEach((input: string) => {\n        possibleEvents.forEach((eventName: string) => {\n            const inputElement = document.getElementById(input) as HTMLInputElement;\n            inputElement.addEventListener(eventName, (ev: Event) => {\n                handleInput();\n            })\n        });\n        handleInput();\n    });\n};\n\nfunction read(id: string): string {\n    return (document.getElementById(id) as HTMLInputElement).value;\n}\n\n\nfunction handleInput() {\n    const new_start = read(\"start_string\");\n    const new_in_string = read(\"in_string\");\n    const new_out_string = read(\"out_string\");\n    if(new_in_string !== \"\" && (new_start !== start || new_in_string !== in_string || new_out_string !== out_string)) {\n        start = new_start;\n        in_string = new_in_string;\n        out_string = new_out_string;\n        const results = generateResults(start, in_string, out_string);\n        const lis = results.map((result: Result) => `<li>${result.depth}: ${result.s} </li>`);\n        const ul = `<ul>${lis.join(\"\")}</ul>`\n        const output = document.getElementById(\"output\") as HTMLElement;\n        output.innerHTML = ul;\n    }\n}\n\ntype Result = {\n    s: string;\n    parent: Result | null;\n    depth: number;\n}\n\nfunction* children(result: Result, in_string: string, out_string: string) {\n    console.log(\"start children\");\n    let at = result.s.indexOf(in_string);\n    while (at !== -1) {\n        const replaced = result.s.substring(0, at) + out_string + result.s.substring(at+in_string.length);\n        yield {\n            s: replaced,\n            parent: result,\n            depth: result.depth + 1\n        };\n        console.log(at);\n        at = result.s.indexOf(in_string, at + 1);\n      }\n}\n\nfunction generateResults(start: string, in_string: string, out_string: string): Result[] {\n    const firstResult: Result = {\n        s: start,\n        parent: null,\n        depth: 0\n    }\n    let results = [firstResult];\n    let at = 0;\n    while(at < results.length && at < 100) {\n        for(let res of children(results[at], in_string, out_string)) {\n            console.log(res);\n            results.push(res);\n        }\n        at += 1;\n    }\n    return results;\n}"],"names":[],"version":3,"file":"index.377278e2.js.map","sourceRoot":"/__parcel_source_root/"}