{"mappings":"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","sources":["<anon>","src/index.ts"],"sourcesContent":["const possibleEvents = new Set([\n    \"input\",\n    \"onpropertychange\"\n]);\nconst inputs = [\n    \"start_string\",\n    \"in_string\",\n    \"out_string\"\n];\nlet start = \"\";\nlet in_string = \"\";\nlet out_string = \"\";\nwindow.onload = ()=>{\n    readParams();\n    inputs.forEach((input)=>{\n        possibleEvents.forEach((eventName)=>{\n            const inputElement = document.getElementById(input);\n            inputElement.addEventListener(eventName, (ev)=>{\n                handleInput();\n            });\n        });\n        handleInput();\n    });\n};\nfunction readParams() {\n    const params = new URL(window.location.href).searchParams;\n    let noop = true;\n    inputs.forEach((input)=>{\n        const inputElement = document.getElementById(input);\n        const value = params.get(input);\n        if (value) {\n            inputElement.value = value;\n            noop = false;\n        }\n    });\n    handleInput();\n}\nfunction setUrl() {\n    const url = new URL(window.location.href);\n    inputs.forEach((input)=>{\n        const inputElement = document.getElementById(input);\n        url.searchParams.set(input, inputElement.value);\n    });\n    history.pushState({}, \"\", url);\n}\nfunction read(id) {\n    return document.getElementById(id).value;\n}\nfunction renderResultStringHtml(result) {\n    if (result.loop_of === null) return result.s;\n    else {\n        const idx = result.s.indexOf(result.loop_of);\n        return `${result.s.substring(0, idx)}<b>${result.loop_of}</b>${result.s.substring(idx + result.loop_of.length)}`;\n    }\n}\nfunction handleInput() {\n    const new_start = read(\"start_string\");\n    const new_in_string = read(\"in_string\");\n    const new_out_string = read(\"out_string\");\n    if (new_in_string !== \"\" && (new_start !== start || new_in_string !== in_string || new_out_string !== out_string)) {\n        start = new_start;\n        in_string = new_in_string;\n        out_string = new_out_string;\n        const results = generateResults(start, in_string, out_string);\n        const lis = results.map((result)=>`<li>${result.depth}: ${renderResultStringHtml(result)} </li>`);\n        const ul = `<ul>${lis.join(\"\")}</ul>`;\n        const output = document.getElementById(\"output\");\n        output.innerHTML = ul;\n        setUrl();\n    }\n}\nfunction findLoop(universe, res, haystack) {\n    const bfs = [\n        res\n    ];\n    let at = 0;\n    const visited = new Set();\n    while(at < bfs.length){\n        res = bfs[at];\n        if (haystack.indexOf(res.s) !== -1) return res.s;\n        for (const parent of res.parents)if (!visited.has(parent)) {\n            bfs.push(universe.get(parent));\n            visited.add(parent);\n        }\n        at++;\n    }\n    return null;\n}\nfunction* children(universe, result, in_string, out_string) {\n    let at = result.s.indexOf(in_string);\n    while(at !== -1){\n        const replaced = result.s.substring(0, at) + out_string + result.s.substring(at + in_string.length);\n        const loop_of = findLoop(universe, result, replaced);\n        const parents = new Set();\n        parents.add(result.s);\n        yield {\n            s: replaced,\n            parents,\n            depth: result.depth + 1,\n            loop_of\n        };\n        at = result.s.indexOf(in_string, at + 1);\n    }\n}\nfunction generateResults(start, in_string, out_string) {\n    const firstResult = {\n        s: start,\n        parents: new Set(),\n        depth: 0,\n        loop_of: null\n    };\n    const universe = new Map();\n    const queue = [\n        firstResult\n    ];\n    universe.set(start, firstResult);\n    let at = 0;\n    while(at < queue.length && at < 500){\n        if (queue[at].loop_of === null) {\n            for (let res of children(universe, queue[at], in_string, out_string))if (!universe.has(res.s)) {\n                queue.push(res);\n                universe.set(res.s, res);\n            } else {\n                const element = universe.get(res.s);\n                element.parents.add(queue[at].s);\n                if (element.loop_of === null) element.loop_of = res.loop_of;\n            }\n        }\n        at += 1;\n    }\n    return queue;\n}\n\n//# sourceMappingURL=index.e26f67cb.js.map\n","const possibleEvents = new Set([\"input\", \"onpropertychange\"]);\nconst inputs = [\"start_string\", \"in_string\", \"out_string\"];\nlet start = \"\";\nlet in_string = \"\";\nlet out_string = \"\";\n\nwindow.onload = () => {\n    readParams();\n    inputs.forEach((input: string) => {\n        possibleEvents.forEach((eventName: string) => {\n            const inputElement = document.getElementById(input) as HTMLInputElement;\n            inputElement.addEventListener(eventName, (ev: Event) => {\n                handleInput();\n            })\n        });\n        handleInput();\n    });\n};\n\nfunction readParams(): void {\n    const params = new URL(window.location.href).searchParams;\n    let noop = true;\n    inputs.forEach((input: string) => {\n        const inputElement = document.getElementById(input) as HTMLInputElement;\n        const value = params.get(input);\n        if (value) {\n            inputElement.value = value;\n            noop = false;\n        }\n    });\n    handleInput();\n}\n\nfunction setUrl(): void {\n    const url = new URL(window.location.href);\n    inputs.forEach((input: string) => {\n        const inputElement = document.getElementById(input) as HTMLInputElement;\n        url.searchParams.set(input, inputElement.value);\n    });\n    history.pushState({}, \"\", url);\n}\n\nfunction read(id: string): string {\n    return (document.getElementById(id) as HTMLInputElement).value;\n}\n\nfunction renderResultStringHtml(result: Result) {\n    if (result.loop_of === null) {\n        return result.s;\n    } else {\n        const idx = result.s.indexOf(result.loop_of);\n        return `${result.s.substring(0,idx)}<b>${result.loop_of}</b>${result.s.substring(idx+result.loop_of.length)}`;\n    }\n}\n\nfunction handleInput() {\n    const new_start = read(\"start_string\");\n    const new_in_string = read(\"in_string\");\n    const new_out_string = read(\"out_string\");\n    if(new_in_string !== \"\" && (new_start !== start || new_in_string !== in_string || new_out_string !== out_string)) {\n        start = new_start;\n        in_string = new_in_string;\n        out_string = new_out_string;\n        const results = generateResults(start, in_string, out_string);\n        const lis = results.map((result: Result) => `<li>${result.depth}: ${renderResultStringHtml(result)} </li>`);\n        const ul = `<ul>${lis.join(\"\")}</ul>`\n        const output = document.getElementById(\"output\") as HTMLElement;\n        output.innerHTML = ul;\n        setUrl();\n    }\n}\n\ntype Result = {\n    s: string;\n    parents: Set<string>;\n    depth: number;\n    loop_of: string | null;\n}\n\nfunction findLoop(universe: Map<string, Result>, res: Result, haystack: string): string | null {\n    const bfs = [res];\n    let at = 0;\n    const visited = new Set();\n    while(at < bfs.length) {\n        res = bfs[at];\n        if (haystack.indexOf(res.s) !== -1) {\n            return res.s;\n        }\n        for(const parent of res.parents) {\n            if(!visited.has(parent)) {\n                bfs.push(universe.get(parent) as Result);\n                visited.add(parent);\n            }\n        }\n        at ++;\n    }\n    return null;\n}\n\nfunction* children(universe: Map<string, Result>, result: Result, in_string: string, out_string: string) {\n    let at = result.s.indexOf(in_string);\n    while (at !== -1) {\n        const replaced = result.s.substring(0, at) + out_string + result.s.substring(at+in_string.length);\n        const loop_of = findLoop(universe, result, replaced);\n        const parents = new Set();\n        parents.add(result.s);\n        yield {\n            s: replaced,\n            parents,\n            depth: result.depth + 1,\n            loop_of\n        };\n        at = result.s.indexOf(in_string, at + 1);\n      }\n}\n\nfunction generateResults(start: string, in_string: string, out_string: string): Result[] {\n    const firstResult: Result = {\n        s: start,\n        parents: new Set(),\n        depth: 0,\n        loop_of: null\n    }\n    const universe = new Map();\n    const queue = [firstResult];\n    universe.set(start, firstResult);\n    let at = 0;\n    while(at < queue.length && at < 500) {\n        if(queue[at].loop_of === null) {\n            for(let res of children(universe, queue[at], in_string, out_string)) {\n                if(!universe.has(res.s)) {\n                    queue.push(res);\n                    universe.set(res.s, res);\n                } else {\n                    const element = universe.get(res.s);\n                    element.parents.add(queue[at].s);\n                    if(element.loop_of === null) {\n                        element.loop_of = res.loop_of;\n                    }\n                }\n            }\n        }\n        at += 1;\n    }\n    return queue;\n}"],"names":["possibleEvents","Set","inputs","start","in_string","out_string","read","id","document","getElementById","value","handleInput","new_start","new_in_string","new_out_string","results","generateResults","firstResult","s","parents","depth","loop_of","universe","Map","queue","set","at","length","res","children","result","indexOf","replaced","substring","findLoop","haystack","bfs","visited","parent","has","push","get","add","element","lis","map","renderResultStringHtml","idx","ul","join","output","innerHTML","setUrl","url","URL","window","location","href","forEach","input","inputElement","searchParams","history","pushState","onload","readParams","params","eventName","addEventListener","ev"],"version":3,"file":"index.e26f67cb.js.map"}