{"mappings":"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","sources":["<anon>","src/index.ts"],"sourcesContent":["const possibleEvents = new Set([\n    \"input\",\n    \"onpropertychange\"\n]);\nconst inputs = [\n    \"start_string\",\n    \"in_string\",\n    \"out_string\"\n];\nlet start = \"\";\nlet in_string = \"\";\nlet out_string = \"\";\nwindow.onload = ()=>{\n    readParams();\n    inputs.forEach((input)=>{\n        possibleEvents.forEach((eventName)=>{\n            const inputElement = document.getElementById(input);\n            inputElement.addEventListener(eventName, (ev)=>{\n                handleInput();\n            });\n        });\n        handleInput();\n    });\n};\nfunction readParams() {\n    const params = new URL(window.location.href).searchParams;\n    let noop = true;\n    inputs.forEach((input)=>{\n        const inputElement = document.getElementById(input);\n        const value = params.get(input);\n        if (value) {\n            inputElement.value = value;\n            noop = false;\n        }\n    });\n    handleInput();\n}\nfunction read(id) {\n    return document.getElementById(id).value;\n}\nfunction renderResultStringHtml(result) {\n    if (result.loop_of === null) return result.s;\n    else {\n        const idx = result.s.indexOf(result.loop_of.s);\n        return `${result.s.substring(0, idx)}<b>${result.loop_of.s}</b>${result.s.substring(idx + result.loop_of.s.length)}`;\n    }\n}\nfunction handleInput() {\n    const new_start = read(\"start_string\");\n    const new_in_string = read(\"in_string\");\n    const new_out_string = read(\"out_string\");\n    if (new_in_string !== \"\" && (new_start !== start || new_in_string !== in_string || new_out_string !== out_string)) {\n        start = new_start;\n        in_string = new_in_string;\n        out_string = new_out_string;\n        const results = generateResults(start, in_string, out_string);\n        const lis = results.map((result)=>`<li>${result.depth}: ${renderResultStringHtml(result)} </li>`);\n        const ul = `<ul>${lis.join(\"\")}</ul>`;\n        const output = document.getElementById(\"output\");\n        output.innerHTML = ul;\n    }\n}\nfunction findLoop(at, haystack) {\n    if (haystack.indexOf(at.s) !== -1) return at;\n    else if (at.parent === null) return null;\n    else return findLoop(at.parent, haystack);\n}\nfunction* children(result, in_string, out_string) {\n    let at = result.s.indexOf(in_string);\n    while(at !== -1){\n        const replaced = result.s.substring(0, at) + out_string + result.s.substring(at + in_string.length);\n        const loop_of = findLoop(result, replaced);\n        yield {\n            s: replaced,\n            parent: result,\n            depth: result.depth + 1,\n            loop_of\n        };\n        at = result.s.indexOf(in_string, at + 1);\n    }\n}\nfunction generateResults(start, in_string, out_string) {\n    const firstResult = {\n        s: start,\n        parent: null,\n        depth: 0,\n        loop_of: null\n    };\n    let results = [\n        firstResult\n    ];\n    let at = 0;\n    while(at < results.length && at < 500){\n        if (results[at].loop_of === null) for (let res of children(results[at], in_string, out_string))results.push(res);\n        at += 1;\n    }\n    return results;\n}\n\n//# sourceMappingURL=index.d3005432.js.map\n","const possibleEvents = new Set([\"input\", \"onpropertychange\"]);\nconst inputs = [\"start_string\", \"in_string\", \"out_string\"];\nlet start = \"\";\nlet in_string = \"\";\nlet out_string = \"\";\n\nwindow.onload = () => {\n    readParams();\n    inputs.forEach((input: string) => {\n        possibleEvents.forEach((eventName: string) => {\n            const inputElement = document.getElementById(input) as HTMLInputElement;\n            inputElement.addEventListener(eventName, (ev: Event) => {\n                handleInput();\n            })\n        });\n        handleInput();\n    });\n};\n\nfunction readParams(): void {\n    const params = new URL(window.location.href).searchParams;\n    let noop = true;\n    inputs.forEach((input: string) => {\n        const inputElement = document.getElementById(input) as HTMLInputElement;\n        const value = params.get(input);\n        if (value) {\n            inputElement.value = value;\n            noop = false;\n        }\n    });\n    handleInput();\n}\n\nfunction read(id: string): string {\n    return (document.getElementById(id) as HTMLInputElement).value;\n}\n\nfunction renderResultStringHtml(result: Result) {\n    if (result.loop_of === null) {\n        return result.s;\n    } else {\n        const idx = result.s.indexOf(result.loop_of.s);\n        return `${result.s.substring(0,idx)}<b>${result.loop_of.s}</b>${result.s.substring(idx+result.loop_of.s.length)}`;\n    }\n}\n\nfunction handleInput() {\n    const new_start = read(\"start_string\");\n    const new_in_string = read(\"in_string\");\n    const new_out_string = read(\"out_string\");\n    if(new_in_string !== \"\" && (new_start !== start || new_in_string !== in_string || new_out_string !== out_string)) {\n        start = new_start;\n        in_string = new_in_string;\n        out_string = new_out_string;\n        const results = generateResults(start, in_string, out_string);\n        const lis = results.map((result: Result) => `<li>${result.depth}: ${renderResultStringHtml(result)} </li>`);\n        const ul = `<ul>${lis.join(\"\")}</ul>`\n        const output = document.getElementById(\"output\") as HTMLElement;\n        output.innerHTML = ul;\n    }\n}\n\ntype Result = {\n    s: string;\n    parent: Result | null;\n    depth: number;\n    loop_of: Result | null;\n}\n\nfunction findLoop(at: Result, haystack: string): Result | null {\n    if (haystack.indexOf(at.s) !== -1) {\n        return at;\n    } else if (at.parent === null) {\n        return null;\n    } else {\n        return findLoop(at.parent, haystack);\n    }\n}\n\nfunction* children(result: Result, in_string: string, out_string: string) {\n    let at = result.s.indexOf(in_string);\n    while (at !== -1) {\n        const replaced = result.s.substring(0, at) + out_string + result.s.substring(at+in_string.length);\n        const loop_of = findLoop(result, replaced);\n        yield {\n            s: replaced,\n            parent: result,\n            depth: result.depth + 1,\n            loop_of\n        };\n        at = result.s.indexOf(in_string, at + 1);\n      }\n}\n\nfunction generateResults(start: string, in_string: string, out_string: string): Result[] {\n    const firstResult: Result = {\n        s: start,\n        parent: null,\n        depth: 0,\n        loop_of: null\n    }\n    let results = [firstResult];\n    let at = 0;\n    while(at < results.length && at < 500) {\n        if(results[at].loop_of === null) {\n            for(let res of children(results[at], in_string, out_string)) {\n                results.push(res);\n            }\n        }\n        at += 1;\n    }\n    return results;\n}"],"names":["possibleEvents","Set","inputs","start","in_string","out_string","read","id","document","getElementById","value","handleInput","new_start","new_in_string","new_out_string","results","generateResults","s","parent","depth","loop_of","at","length","res","children","result","indexOf","replaced","substring","findLoop","haystack","push","lis","map","renderResultStringHtml","idx","ul","join","output","innerHTML","window","onload","readParams","params","URL","location","href","searchParams","forEach","input","inputElement","get","eventName","addEventListener","ev"],"version":3,"file":"index.d3005432.js.map"}